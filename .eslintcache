[{"C:\\Work\\React\\stylesconference\\src\\index.js":"1","C:\\Work\\React\\stylesconference\\src\\App.js":"2","C:\\Work\\React\\stylesconference\\src\\LearnuseState.js":"3","C:\\Work\\React\\stylesconference\\src\\components\\Note.js":"4","C:\\Work\\React\\stylesconference\\src\\services\\notes.js":"5","C:\\Work\\React\\stylesconference\\src\\services\\Notification.js":"6","C:\\Work\\React\\stylesconference\\src\\components\\Footer.js":"7"},{"size":227,"mtime":1610172508589,"results":"8","hashOfConfig":"9"},{"size":2466,"mtime":1610174263844,"results":"10","hashOfConfig":"9"},{"size":3634,"mtime":1607010342330,"results":"11","hashOfConfig":"9"},{"size":328,"mtime":1610172741506,"results":"12","hashOfConfig":"9"},{"size":704,"mtime":1610115906080,"results":"13","hashOfConfig":"9"},{"size":232,"mtime":1610173692311,"results":"14","hashOfConfig":"9"},{"size":342,"mtime":1610174235660,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1l075y4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"C:\\Work\\React\\stylesconference\\src\\index.js",[],["34","35"],"C:\\Work\\React\\stylesconference\\src\\App.js",["36"],"import React, { useState, useEffect } from \"react\"\nimport './App.css'\nimport axios from 'axios'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport Notification from './services/Notification'\nimport Footer from './components/Footer'\n\n\nconst App = (props) => {\n\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState(null)\n\n\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n\n\n  // console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5\n    }\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote(\"\")\n      })\n  }\n\n  const toggleImportanceOf = (id) => {\n\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from the server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n  }\n\n\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n\n  return (\n\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            note={note}\n            key={i}\n            toggleImportance={() => { toggleImportanceOf(note.id) }} />)}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n\n  )\n}\n\nexport default App;\n","C:\\Work\\React\\stylesconference\\src\\LearnuseState.js",[],"C:\\Work\\React\\stylesconference\\src\\components\\Note.js",[],"C:\\Work\\React\\stylesconference\\src\\services\\notes.js",["37"],"import axios from 'axios'\r\nconst baseUrl = 'http://localhost:3001/notes'\r\n\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n\r\n  const nonExisting = {\r\n    id: 1000,\r\n    content: 'This note is not saved to the server',\r\n    date: '2020.08.01',\r\n    important: true,\r\n  }\r\n\r\n  return request.then(response => response.data.concat(nonExisting))\r\n}\r\n\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n\r\nexport default { getAll, create, update }\r\n\r\n","C:\\Work\\React\\stylesconference\\src\\services\\Notification.js",[],["38","39"],"C:\\Work\\React\\stylesconference\\src\\components\\Footer.js",[],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":3,"column":8,"nodeType":"46","messageId":"47","endLine":3,"endColumn":13},{"ruleId":"48","severity":1,"message":"49","line":31,"column":1,"nodeType":"50","endLine":31,"endColumn":42},{"ruleId":"40","replacedBy":"51"},{"ruleId":"42","replacedBy":"52"},"no-native-reassign",["53"],"no-negated-in-lhs",["54"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",["53"],["54"],"no-global-assign","no-unsafe-negation"]